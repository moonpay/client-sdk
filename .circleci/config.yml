version: 2.1
orbs:
  slack: circleci/slack@4.12.1
  gcp-cli: circleci/gcp-cli@2.4.1

commands:
  restore_deps:
    steps:
      - checkout
      - attach_workspace:
          name: Restore package-lock.json
          at: .
      - restore_cache:
          name: Restore NPM packages cache
          keys:
            - deps-cache-{{ checksum "package-lock.json" }}
  notify:
    parameters:
      message:
        description: The message to send
        type: string
    steps:
      - slack/notify:
          channel: engineering-deployments,
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<<parameters.message>> (Client SDK)"
                  }
                }
              ]
            }
          event: always
jobs:
  install-dependencies:
    resource_class: large
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM packages cache
          keys:
            - deps-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            if [[ -d node_modules ]]; then
                    exit 0
            fi
            npm ci --cache .npm --prefer-offline
      - save_cache:
          key: deps-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - package-lock.json

  build:
    resource_class: large
    docker:
      - image: node:16-alpine
    steps:
      - restore_deps
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist

  notify-deployment-will-happen:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - notify:
          message: ":steam_locomotive: Distribute build has been triggered"

  notify-deployment-complete:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - notify:
          message: ":white_check_mark: Distribute complete"

  upload:
    resource_class: large
    docker:
      - image: cimg/base:stable
    steps:
      - gcp-cli/install:
          version: 397.0.0
      - attach_workspace:
          at: .
      - run:
          name: 'GCP auth'
          command: |
            echo ${CIRCLE_OIDC_TOKEN} > `pwd`/.ci_job_jwt_file
            gcloud iam workload-identity-pools create-cred-config ${GCP_WORKLOAD_IDENTITY_PROVIDER} \
              --service-account="${GCP_SERVICE_ACCOUNT}" \
              --output-file=`pwd`/.gcp_temp_cred.json \
              --credential-source-file=`pwd`/.ci_job_jwt_file
            gcloud auth login --cred-file=`pwd`/.gcp_temp_cred.json
      - run:
          name: Upload client-sdk to a GCS bucket
          command: gsutil -m rsync -r ./dist/ gs://hypermint.com/client-sdk/

workflows:
  distribute:
    jobs:
      - install-dependencies
      - notify-deployment-will-happen:
          context: slack
          filters:
            branches:
              only:
                - main
      - build:
          requires:
            - install-dependencies
      - upload:
          requires:
            - build
          context: gcp-workload-federation
          filters:
            branches:
              only:
                main
      - notify-deployment-complete:
          context: slack
          requires:
            - upload
          filters:
            branches:
              only:
                main